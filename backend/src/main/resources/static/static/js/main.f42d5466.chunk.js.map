{"version":3,"sources":["components/Announcement.js","components/Schedule.js","App.js","reportWebVitals.js","router/index.js","index.js"],"names":["Announcement","props","Form","useForm","form","className","src","onFinish","data","console","log","axios","post","then","res","catch","error","alert","JSON","stringify","initialValues","title","content","Item","label","name","placeholder","htmlType","type","to","Schedule","useState","pickerV","setPickerV","initValue","scheduleTime","Date","address","syncSchedule","date","formData","moment","format","visible","onClose","min","precision","onConfirm","val","s","setFieldsValue","value","style","textAlign","onClick","App","state","domain","corpId","authCode","userId","userName","showType","url","height","color","lineHeight","background","backgroundImage","this","login","autoplay","backgroundRepeat","backgroundSize","get","loginAction","_this","dd","permission","requestAuthCode","onSuccess","code","success","message","info","setTimeout","setState","onFail","err","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","history","createHashHistory","RouterConfig","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f42d5466.chunk.js","sourcesContent":["import {Form, Input, Button} from \"antd\"\nimport React from \"react\"\nimport {NavLink} from 'react-router-dom'\nimport '../App.css'\nimport \"antd/dist/antd.min.css\"\nimport axios from \"axios\";\n\nconst Announcement = (props) => {\n    const [form] = Form.useForm()\n    const initValue = {\n        title: \"公告标题\",\n        content: \"公告内容\",\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"======= pushAnnouncement =======\")\n        axios.post( \"/biz/pushAnnouncement\", data).then(res => {\n        }).catch(error => {\n            alert(\"pushAnnouncement err, \" + JSON.stringify(error))\n        })\n    }\n\n    return (\n        <div className=\"content\">\n            <div className=\"header\">\n                <img\n                    src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n                    className=\"headImg\"\n                />\n                钉钉模板\n            </div>\n            <div className=\"App\">\n                <h3 className=\"title\">酷应用示例—推送公告到群</h3>\n                <Form form={form} onFinish={onSubmit} initialValues={initValue}>\n                    <Form.Item label=\"公告标题\" name=\"title\">\n                        <Input placeholder=\"请输入公告标题\"/>\n                    </Form.Item>\n                    <Form.Item label=\"公告内容\" name=\"content\">\n                        <Input placeholder=\"请输入公告内容\"/>\n                    </Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\">\n                        提交\n                    </Button>\n                </Form>\n                <NavLink to='/App'>←应用首页</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Announcement\n","import react, { useEffect, useState } from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport React from \"react\"\nimport { DatePicker } from \"antd-mobile\"\nimport moment from \"moment\"\nimport {NavLink} from 'react-router-dom'\nimport '../App.css'\nimport \"antd/dist/antd.min.css\"\nimport axios from \"axios\"\n\nconst Schedule = (props) => {\n    const [form] = Form.useForm();\n    const [pickerV, setPickerV] = useState(false);\n    const initValue = {\n        title: \"日程主题\",\n        scheduleTime: new Date(),\n        address: \"日程地点\",\n    }\n\n    const onSubmit = (data) => {\n        const formData ={\n            ...data,\n            scheduleTime: moment(data.scheduleTime).format(\"YYYY-MM-DD HH:mm:ss\")\n        }\n        syncSchedule(formData)\n    }\n\n    const syncSchedule = (data) => {\n        const { title, scheduleTime, address} = data\n        axios.post(\"/biz/syncSchedule\", {\n            title:title,\n            date:scheduleTime,\n            address:address\n        }).then(res => {\n        }).catch(error => {\n            alert(\"syncSchedule err, \" + JSON.stringify(error))\n        })\n    }\n\n    return (\n        <div className=\"content\">\n            <div className=\"header\">\n                <img\n                    src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n                    className=\"headImg\"\n                />\n                钉钉模板\n            </div>\n            <div className=\"App\">\n                <h3 className=\"title\">酷应用示例—同步日程到群</h3>\n                <Form form={form} onFinish={onSubmit} initialValues={initValue}>\n                    <Form.Item label=\"日程主题\" name=\"title\">\n                        <Input placeholder=\"请输入日程主题\" />\n                    </Form.Item>\n                    <Form.Item label=\"日程地点\" name=\"address\">\n                        <Input placeholder=\"请输入日程地点\" />\n                    </Form.Item>\n                    <Form.Item label=\"日程时间\" name=\"scheduleTime\">\n                        <DatePicker\n                            visible={pickerV}\n                            onClose={() => {\n                                setPickerV(false)\n                            }}\n                            min={new Date()}\n                            precision=\"second\"\n                            onConfirm={(val, s) => {\n                                form.setFieldsValue({\n                                    scheduleTime: val,\n                                })\n                            }}\n                        >\n                        {(value) => (\n                            <div style={{ textAlign: \"left\" }}>\n                                <Button type=\"primary\" onClick={() => setPickerV(true)} >\n                                    选择时间\n                                </Button>{\" \"}\n                                {moment(value).format(\"YYYY-MM-DD HH:mm:ss\")}\n                            </div>\n                        )}\n                        </DatePicker>\n                    </Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\">\n                        提交\n                    </Button>\n                </Form>\n                <NavLink to='/App'>←应用首页</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Schedule\n","import axios from 'axios'\nimport React from 'react'\nimport './App.css'\nimport \"antd/dist/antd.min.css\"\nimport { Button, message, Carousel} from \"antd\"\nimport * as dd from \"dingtalk-jsapi\"\nimport Announcement from \"./components/Announcement\"\nimport Schedule from \"./components/Schedule\"\nimport {NavLink} from 'react-router-dom'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //内网穿透工具介绍:\n            // https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n            domain: \"\",\n            corpId: '',\n            authCode: '',\n            userId: '',\n            userName: '',\n            showType: 0\n        }\n    }\n\n    constructorContentStyle(url) {\n        const contentStyle = {\n            height: '160px',\n            color: '#fff',\n            lineHeight: '160px',\n            textAlign: 'center',\n            background: '#364d79',\n            backgroundImage: 'url(' + url + ')'\n        }\n        return contentStyle;\n    }\n\n    render() {\n        if (this.state.userId === '') {\n            // 免登操作\n            this.login();\n        }\n        return (\n        <div className=\"content\">\n            <div className=\"header\">\n                <img\n                    src=\"https://img.alicdn.com/imgextra/i3/O1CN01Mpftes1gwqxuL0ZQE_!!6000000004207-2-tps-240-240.png\"\n                    className=\"headImg\"\n                />\n                钉钉模板\n            </div>\n            <div className=\"App\">\n                <h2>酷应用配置</h2>\n                <p>体验此应用需要做如下配置，参考文档：https://open.dingtalk.com/document/org/group-application</p>\n                <Carousel autoplay={true}>\n                    <div>\n                        <p style={{\n                            height: '160px',\n                            color: 'red',\n                            lineHeight: '160px',\n                            textAlign: 'center',\n                            background: '#364d79',\n                            backgroundRepeat:'no-repeat',\n                            backgroundSize:'100% 100%',\n                            backgroundImage: 'url(https://img.alicdn.com/imgextra/i2/O1CN01MG0GBf1fbxJHpo96o_!!6000000004026-2-tps-988-593.png)'\n                        }}>第一步：配置机器人</p>\n                    </div>\n                    <div>\n                        <p style={{\n                            height: '160px',\n                            color: 'red',\n                            lineHeight: '160px',\n                            textAlign: 'center',\n                            background: '#364d79',\n                            backgroundRepeat:'no-repeat',\n                            backgroundSize:'100% 100%',\n                            backgroundImage: 'url(https://img.alicdn.com/imgextra/i4/O1CN01DXlDeL1ZBx81BluOv_!!6000000003157-2-tps-1013-610.png)'\n                        }}>第二步：开启配置应用扩展</p>\n                    </div>\n                    <div>\n                        <p style={{\n                            height: '160px',\n                            color: 'red',\n                            lineHeight: '160px',\n                            textAlign: 'center',\n                            background: '#364d79',\n                            backgroundRepeat:'no-repeat',\n                            backgroundSize:'100% 100%',\n                            backgroundImage: 'url(https://img.alicdn.com/imgextra/i3/O1CN01Lz3wjC1aFRlgZo0fW_!!6000000003300-2-tps-1005-536.png)'\n                        }}>第三步：配置群入口</p>\n                    </div>\n                    <div>\n                        <p style={{\n                            height: '160px',\n                            color: 'red',\n                            lineHeight: '160px',\n                            textAlign: 'center',\n                            background: '#364d79',\n                            backgroundRepeat:'no-repeat',\n                            backgroundSize:'100% 100%',\n                            backgroundImage: 'url(https://img.alicdn.com/imgextra/i4/O1CN01DXlDeL1ZBx81BluOv_!!6000000003157-2-tps-1013-610.png)'\n                        }}>第四步：点击按钮发布到群</p>\n                    </div>\n                </Carousel>\n                <br/><br/>\n                <div>\n                    <h2>酷应用示例</h2>\n                    <p>\n                        <Button type=\"primary\">\n                            <NavLink to='/Announcement'>推送公告到群</NavLink>\n                        </Button>\n                    </p>\n                    <p>\n                        <Button type=\"primary\">\n                            <NavLink to='/Schedule'>同步日程到群</NavLink>\n                        </Button>\n                    </p>\n                </div>\n            </div>\n        </div>\n        );\n    }\n\n    //登录-获取corpId\n    login() {\n        axios.get(this.state.domain + \"/getCorpId\")\n            .then(res => {\n                if (res.data) {\n                    this.loginAction(res.data);\n                }\n            }).catch(error => {\n            alert(\"corpId err, \" + JSON.stringify(error))\n        })\n    }\n\n    //登录操作\n    loginAction(corpId) {\n        // alert(\"corpId: \" +  corpId);\n        let _this = this;\n        dd.runtime.permission.requestAuthCode({\n            corpId: corpId,//企业 corpId\n            onSuccess: function (res) {\n                // 调用成功时回调\n                _this.state.authCode = res.code\n                axios.get(_this.state.domain + \"/login?authCode=\" + _this.state.authCode\n                ).then(res => {\n                    if (res && res.data.success) {\n                        let userId = res.data.data.userId;\n                        let userName = res.data.data.userName;\n                        message.info('登录成功，你好' + userName);\n                        setTimeout(function () {\n                            _this.setState({\n                                userId: userId,\n                                userName: userName\n                            })\n                        }, 0)\n                    } else {\n                        alert(\"login failed --->\" + JSON.stringify(res));\n                    }\n                }).catch(error => {\n                    alert(\"httpRequest failed --->\" + JSON.stringify(error))\n                })\n            },\n            onFail: function (err) {\n                // 调用失败时回调\n                alert(\"requestAuthCode failed --->\" + JSON.stringify(err))\n            }\n        });\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Announcement from '../components/Announcement';\nimport Schedule from '../components/Schedule';\nimport App from '../App';\nimport React from 'react';\nimport {Router,Route,Switch,Redirect} from 'react-router-dom';\nimport { createHashHistory } from \"history\";\nconst history = createHashHistory();\n\nclass RouterConfig extends React.Component{\n    render(){\n        return(\n            <Router history={history}>\n                <Switch>\n                    <Route path='/' exact render={()=>(\n                        <Redirect to='/App'/>\n                    )}/>\n                    <Route path='/App' component={App}/>\n                    <Route path='/Announcement' component={Announcement}/>\n                    <Route path='/Schedule' component={Schedule}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\nexport default RouterConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport RouterConfig from './router/index.js';\n\nReactDOM.render(\n    <RouterConfig/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}